# Generated by Django 4.1.3 on 2023-10-12 11:16

import PinkStrawberry.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    replaces = [('PinkStrawberry', '0001_initial'), ('PinkStrawberry', '0002_sequences_imgt_sequence_sequences_submitted_sequence'), ('PinkStrawberry', '0003_predictions'), ('PinkStrawberry', '0004_alter_mutations_options'), ('PinkStrawberry', '0005_runidentifiers_alter_sequences_run_identifier'), ('PinkStrawberry', '0006_alter_mutations_aa_changes'), ('PinkStrawberry', '0007_runidentifiers_description_runidentifiers_run_name'), ('PinkStrawberry', '0008_sequences_submitted_sequence_translated'), ('PinkStrawberry', '0009_alter_sequences_imgt_sequence_and_more'), ('PinkStrawberry', '0010_alter_mutations_sequence_alter_mutations_bases_aa_and_more'), ('PinkStrawberry', '0011_run_identifier_sequence_and_more'), ('PinkStrawberry', '0012_alter_run_identifier_description_and_more'), ('PinkStrawberry', '0013_alter_aa_sequences_cdr1_imgt_and_more'), ('PinkStrawberry', '0014_alter_nt_sequences_pfiveprime_j_end_and_more'), ('PinkStrawberry', '0015_sequence_translated_sequence'), ('PinkStrawberry', '0016_glycosite'), ('PinkStrawberry', '0017_germline'), ('PinkStrawberry', '0018_imgt_gene_db_germline_imgt_gene_db'), ('PinkStrawberry', '0019_patient_sequence_nt_constant_sequence_nt_leading_bcr_and_more'), ('PinkStrawberry', '0020_sequence_patient'), ('PinkStrawberry', '0021_rename_translated_sequence_sequence_aa_sequence'), ('PinkStrawberry', '0022_sequence_type'), ('PinkStrawberry', '0023_sequence_comment'), ('PinkStrawberry', '0024_sequence_aa_constant_sequence_aa_leading'), ('PinkStrawberry', '0025_subtype_alter_patient_options_patient_created_at_and_more'), ('PinkStrawberry', '0026_alter_patient_options_remove_patient_created_at'), ('PinkStrawberry', '0027_sequence_d_germline_sequence_j_germline_and_more'), ('PinkStrawberry', '0028_vquest_run'), ('PinkStrawberry', '0029_alter_aa_sequences_sequence_identifier_and_more'), ('PinkStrawberry', '0030_project_rename_run_name_vquest_run_name_and_more'), ('PinkStrawberry', '0031_vquest_run_comment'), ('PinkStrawberry', '0032_alter_vquest_run_project'), ('PinkStrawberry', '0033_sequence_nt_sequence'), ('PinkStrawberry', '0034_glycosite_region'), ('PinkStrawberry', '0035_aa_change_nt_mutation'), ('PinkStrawberry', '0036_rename_aa_mutated_aa_change_aa_changed'), ('PinkStrawberry', '0037_alter_aa_change_similarity'), ('PinkStrawberry', '0038_rename_sequence_germline_aa_sequence_and_more'), ('PinkStrawberry', '0039_remove_mutations_bases_aa_and_more'), ('PinkStrawberry', '0040_alter_junction_accepted_d_gene_nb_and_more'), ('PinkStrawberry', '0041_alter_nt_sequences_fiveprime_j_region_and_more'), ('PinkStrawberry', '0042_alter_junction_junction_and_more'), ('PinkStrawberry', '0043_rename_aa_change_imgt_aa_change_and_more'), ('PinkStrawberry', '0044_alter_imgt_aa_change_sequence_and_more'), ('PinkStrawberry', '0045_aa_change_nt_mutation'), ('PinkStrawberry', '0046_rename_nt_mutated_aa_change_mutated_and_more'), ('PinkStrawberry', '0047_rename_mutated_aa_change_changed'), ('PinkStrawberry', '0048_prediction'), ('PinkStrawberry', '0049_peptide_comparison'), ('PinkStrawberry', '0050_ms_peptide'), ('PinkStrawberry', '0051_alter_ms_peptide_confidence'), ('PinkStrawberry', '0052_ms_peptide__sheet_sequence_alter_ms_peptide_allele_and_more'), ('PinkStrawberry', '0053_rename__sheet_sequence_ms_peptide_sheet_sequence'), ('PinkStrawberry', '0054_predicted_found'), ('PinkStrawberry', '0055_prediction_germline'), ('PinkStrawberry', '0056_ms_peptide_possible_allele'), ('PinkStrawberry', '0057_mhc_allele'), ('PinkStrawberry', '0058_remove_mhc_allele_id_alter_mhc_allele_name'), ('PinkStrawberry', '0059_alter_ms_peptide_allele_and_more'), ('PinkStrawberry', '0060_remove_ms_peptide_possible_allele_and_more'), ('PinkStrawberry', '0061_alter_predicted_found_quality'), ('PinkStrawberry', '0062_prediction_binder'), ('PinkStrawberry', '0063_rename_sequence_prediction_mhcpansequence'), ('PinkStrawberry', '0064_prediction_sequence'), ('PinkStrawberry', '0065_alignment'), ('PinkStrawberry', '0066_rename_pos_aa_change_position_and_more'), ('PinkStrawberry', '0067_rename_start_glycosite_position_and_more'), ('PinkStrawberry', '0068_ms_peptide_sequence_start'), ('PinkStrawberry', '0069_glycosite_insequence')]

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='RunIdentifiers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('description', models.TextField(default='None')),
                ('run_name', models.TextField(default='None')),
            ],
            options={
                'get_latest_by': 'id',
            },
        ),
        migrations.CreateModel(
            name='Sequences',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Sequence_Number', models.IntegerField()),
                ('Sequence_ID', models.CharField(max_length=100)),
                ('V_DOMAIN_Functionality', models.CharField(max_length=100)),
                ('V_GENE_and_allele', models.TextField()),
                ('IMGT_sequence', models.TextField(blank=True, null=True)),
                ('submitted_sequence', models.TextField(blank=True, null=True)),
                ('submitted_sequence_translated', models.TextField(blank=True, null=True)),
            ],
            options={
                'get_latest_by': 'id',
            },
        ),
        migrations.CreateModel(
            name='Mutations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('aa_original', models.CharField(max_length=1)),
                ('aa_pos', models.IntegerField()),
                ('aa_mutated', models.CharField(max_length=1)),
                ('hydrophobicity', models.BooleanField()),
                ('volume', models.BooleanField()),
                ('chemical_characteristics', models.BooleanField()),
                ('aa_changes', models.CharField(max_length=18)),
                ('region', models.CharField(max_length=10)),
                ('sequence', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sequences', to='PinkStrawberry.sequences')),
            ],
            options={
                'get_latest_by': 'id',
            },
        ),
        migrations.CreateModel(
            name='Mutations_bases',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('base_original', models.CharField(max_length=1)),
                ('base_pos', models.IntegerField()),
                ('base_mutated', models.CharField(max_length=1)),
            ],
        ),
        migrations.CreateModel(
            name='Predictions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('peptide', models.TextField()),
                ('allele', models.CharField(max_length=20)),
                ('score', models.FloatField()),
                ('percentile_rank', models.FloatField()),
                ('affinity', models.FloatField()),
                ('offset', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Run_Identifier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('run_name', models.TextField(null=True)),
                ('description', models.TextField(null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'get_latest_by': 'id',
            },
        ),
        migrations.CreateModel(
            name='Sequence',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Sequence_number', models.IntegerField()),
                ('Sequence_ID', models.CharField(max_length=25)),
                ('V_DOMAIN_Functionality', models.CharField(max_length=20)),
                ('V_GENE_and_allele', models.TextField()),
                ('Run', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Sequence', to='PinkStrawberry.run_identifier')),
                ('Translated_Sequence', models.TextField(null=True)),
                ('Nt_Constant', models.TextField(null=True)),
                ('Nt_Leading', models.TextField(null=True)),
            ],
            options={
                'get_latest_by': 'id',
            },
        ),
        migrations.CreateModel(
            name='Glycosite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sequence', models.CharField(max_length=4)),
                ('position', models.IntegerField()),
                ('Sequence_Identifier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Glycosite', to='PinkStrawberry.sequence')),
                ('germline', models.BooleanField(default=None)),
                ('insequence', models.BooleanField(default=1)),
            ],
            options={
                'get_latest_by': 'id',
            },
        ),
        migrations.CreateModel(
            name='IMGT_Gene_DB',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('release', models.TextField()),
                ('downloaded_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'get_latest_by': 'id',
            },
        ),
        migrations.CreateModel(
            name='Germline',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Accesion_number', models.TextField(null=True)),
                ('Gene_and_allele', models.TextField(null=True)),
                ('Species', models.TextField(null=True)),
                ('Functionality', models.TextField(null=True)),
                ('Labels', models.TextField(null=True)),
                ('Accesion_start_end', models.TextField(null=True)),
                ('Accesion_nucleotide_nb', models.TextField(null=True)),
                ('Codon_start', models.TextField(null=True)),
                ('Fiveprime_changed', models.TextField(null=True)),
                ('Threeprime_changed', models.TextField(null=True)),
                ('Sequencing_changed', models.TextField(null=True)),
                ('AA_nb', models.TextField(null=True)),
                ('Length', models.TextField(null=True)),
                ('Partial', models.TextField(null=True)),
                ('Reverse_complementary', models.TextField(null=True)),
                ('AA_Sequence', models.TextField(null=True)),
                ('IMGT_Gene_DB', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='Germline', to='PinkStrawberry.imgt_gene_db')),
                ('Nt_Sequence', models.TextField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Identifier', models.TextField(unique=True)),
                ('Comment', models.TextField(null=True)),
            ],
            options={
                'get_latest_by': 'id',
            },
        ),
        migrations.CreateModel(
            name='BCR',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Identifier', models.TextField()),
                ('Mass', models.FloatField(null=True)),
                ('Run', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='BCR', to='PinkStrawberry.run_identifier')),
            ],
        ),
        migrations.AddField(
            model_name='sequence',
            name='BCR',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Sequence', to='PinkStrawberry.bcr'),
        ),
        migrations.AddField(
            model_name='sequence',
            name='Patient',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Sequence', to='PinkStrawberry.patient'),
        ),
        migrations.RenameField(
            model_name='sequence',
            old_name='Translated_Sequence',
            new_name='AA_Sequence',
        ),
        migrations.AddField(
            model_name='sequence',
            name='Type',
            field=models.CharField(max_length=1, null=True),
        ),
        migrations.AddField(
            model_name='sequence',
            name='Comment',
            field=models.TextField(null=True),
        ),
        migrations.AddField(
            model_name='sequence',
            name='AA_Constant',
            field=models.TextField(null=True),
        ),
        migrations.AddField(
            model_name='sequence',
            name='AA_Leading',
            field=models.TextField(null=True),
        ),
        migrations.CreateModel(
            name='Subtype',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.TextField(unique=True)),
            ],
        ),
        migrations.AddField(
            model_name='sequence',
            name='Subtype',
            field=models.ManyToManyField(to='PinkStrawberry.subtype'),
        ),
        migrations.AddField(
            model_name='sequence',
            name='D_Germline',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='SequenceD', to='PinkStrawberry.germline'),
        ),
        migrations.AddField(
            model_name='sequence',
            name='J_Germline',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='SequenceJ', to='PinkStrawberry.germline'),
        ),
        migrations.AddField(
            model_name='sequence',
            name='V_Germline',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='SequenceV', to='PinkStrawberry.germline'),
        ),
        migrations.CreateModel(
            name='AA_sequences',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('J_GENE_and_allele', models.TextField()),
                ('D_GENE_and_allele', models.TextField(null=True)),
                ('V_D_J_REGION', models.TextField(null=True)),
                ('V_J_REGION', models.TextField(null=True)),
                ('V_REGION', models.TextField()),
                ('FR1_IMGT', models.TextField(null=True)),
                ('CDR1_IMGT', models.TextField(null=True)),
                ('FR2_IMGT', models.TextField(null=True)),
                ('CDR2_IMGT', models.TextField(null=True)),
                ('FR3_IMGT', models.TextField(null=True)),
                ('CDR3_IMGT', models.TextField(null=True)),
                ('JUNCTION', models.TextField()),
                ('J_REGION', models.TextField()),
                ('FR4_IMGT', models.TextField(null=True)),
                ('Sequence_Identifier', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='AA_sequences', to='PinkStrawberry.sequence')),
            ],
            options={
                'get_latest_by': 'id',
            },
        ),
        migrations.CreateModel(
            name='IMGT_gapped_AA_sequences',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('J_GENE_and_allele', models.TextField()),
                ('D_GENE_and_allele', models.TextField(null=True)),
                ('V_D_J_REGION', models.TextField(null=True)),
                ('V_J_REGION', models.TextField(null=True)),
                ('V_REGION', models.TextField()),
                ('FR1_IMGT', models.TextField()),
                ('CDR1_IMGT', models.TextField()),
                ('FR2_IMGT', models.TextField()),
                ('CDR2_IMGT', models.TextField()),
                ('FR3_IMGT', models.TextField()),
                ('CDR3_IMGT', models.TextField()),
                ('JUNCTION', models.TextField()),
                ('J_REGION', models.TextField()),
                ('FR4_IMGT', models.TextField()),
                ('Sequence_Identifier', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='IMGT_gapped_AA_sequences', to='PinkStrawberry.sequence')),
            ],
            options={
                'get_latest_by': 'id',
            },
        ),
        migrations.CreateModel(
            name='IMGT_gapped_nt_sequences',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('J_GENE_and_allele', models.TextField()),
                ('D_GENE_and_allele', models.TextField(null=True)),
                ('V_D_J_REGION', models.TextField(null=True)),
                ('V_J_REGION', models.TextField(null=True)),
                ('V_REGION', models.TextField()),
                ('FR1_IMGT', models.TextField()),
                ('CDR1_IMGT', models.TextField()),
                ('FR2_IMGT', models.TextField()),
                ('CDR2_IMGT', models.TextField()),
                ('FR3_IMGT', models.TextField()),
                ('CDR3_IMGT', models.TextField()),
                ('JUNCTION', models.TextField()),
                ('J_REGION', models.TextField()),
                ('FR4_IMGT', models.TextField()),
                ('Sequence_Identifier', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='IMGT_gapped_nt_sequences', to='PinkStrawberry.sequence')),
            ],
            options={
                'get_latest_by': 'id',
            },
        ),
        migrations.CreateModel(
            name='Junction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('J_GENE_and_allele', models.TextField()),
                ('D_GENE_and_allele', models.TextField(null=True)),
                ('JUNCTION_frame', models.TextField(null=True)),
                ('JUNCTION', models.TextField(null=True)),
                ('JUNCTION_with_frameshift', models.TextField(null=True)),
                ('threeprime_V_REGION', models.TextField(null=True)),
                ('Pthreeprime_V', models.TextField(null=True)),
                ('N_REGION', models.TextField(null=True)),
                ('N1_REGION', models.TextField(null=True)),
                ('Pfiveprime_D', models.TextField(null=True)),
                ('D_REGION', models.TextField(null=True)),
                ('Pthreeprime_D', models.TextField(null=True)),
                ('Pfiveprime_D1', models.TextField(null=True)),
                ('D1_REGION', models.TextField(null=True)),
                ('Pthreeprime_D1', models.TextField(null=True)),
                ('N2_REGION', models.TextField(null=True)),
                ('Pfiveprime_D2', models.TextField(null=True)),
                ('D2_REGION', models.TextField(null=True)),
                ('Pthreeprime_D2', models.TextField(null=True)),
                ('N3_REGION', models.TextField(null=True)),
                ('Pfiveprime_D3', models.TextField(null=True)),
                ('D3_REGION', models.TextField(null=True)),
                ('Pthreeprime_D3', models.TextField(null=True)),
                ('N4_REGION', models.TextField(null=True)),
                ('Pfiveprime_J', models.TextField(null=True)),
                ('fiveprime_J_REGION', models.TextField(null=True)),
                ('JUNCTION_nt_nb', models.IntegerField(null=True)),
                ('threeprime_V_REGION_nt_nb', models.IntegerField(null=True)),
                ('Pthreeprime_V_nt_nb', models.IntegerField(null=True)),
                ('N_REGION_nt_nb', models.IntegerField(null=True)),
                ('N1_REGION_nt_nb', models.IntegerField(null=True)),
                ('Pfiveprime_D_nt_nb', models.IntegerField(null=True)),
                ('D_REGION_nt_nb', models.IntegerField(null=True)),
                ('Pthreeprime_D_nt_nb', models.IntegerField(null=True)),
                ('Pfiveprime_D1_nt_nb', models.IntegerField(null=True)),
                ('D1_REGION_nt_nb', models.IntegerField(null=True)),
                ('Pthreeprime_D1_nt_nb', models.IntegerField(null=True)),
                ('N2_REGION_nt_nb', models.IntegerField(null=True)),
                ('Pfiveprime_D2_nt_nb', models.IntegerField(null=True)),
                ('D2_REGION_nt_nb', models.IntegerField(null=True)),
                ('Pthreeprime_D2_nt_nb', models.IntegerField(null=True)),
                ('N3_REGION_nt_nb', models.IntegerField(null=True)),
                ('Pfiveprime_D3_nt_nb', models.IntegerField(null=True)),
                ('D3_REGION_nt_nb', models.IntegerField(null=True)),
                ('Pthreeprime_D3_nt_nb', models.IntegerField(null=True)),
                ('N4_REGION_nt_nb', models.IntegerField(null=True)),
                ('Pfiveprime_J_nt_nb', models.IntegerField(null=True)),
                ('fiveprime_J_REGION_nt_nb', models.IntegerField(null=True)),
                ('threeprime_V_REGION_trimmed_nt_nb', models.IntegerField(null=True)),
                ('fiveprime_D_REGION_trimmed_nt_nb', models.IntegerField(null=True)),
                ('threeprime_D_REGION_trimmed_nt_nb', models.IntegerField(null=True)),
                ('fiveprime_D1_REGION_trimmed_nt_nb', models.IntegerField(null=True)),
                ('threeprime_D1_REGION_trimmed_nt_nb', models.IntegerField(null=True)),
                ('fiveprime_D2_REGION_trimmed_nt_nb', models.IntegerField(null=True)),
                ('threeprime_D2_REGION_trimmed_nt_nb', models.IntegerField(null=True)),
                ('fiveprime_D3_REGION_trimmed_nt_nb', models.IntegerField(null=True)),
                ('threeprime_D3_REGION_trimmed_nt_nb', models.IntegerField(null=True)),
                ('fiveprime_J_REGION_trimmed_nt_nb', models.IntegerField(null=True)),
                ('threeprime_V_REGION_mut_nt_nb', models.IntegerField(null=True)),
                ('D_REGION_mut_nt_nb', models.IntegerField(null=True)),
                ('D1_REGION_mut_nt_nb', models.IntegerField(null=True)),
                ('D2_REGION_mut_nt_nb', models.IntegerField(null=True)),
                ('D3_REGION_mut_nt_nb', models.IntegerField(null=True)),
                ('fiveprime_J_REGION_mut_nt_nb', models.IntegerField(null=True)),
                ('D_REGION_reading_frame', models.IntegerField(null=True)),
                ('Ngc', models.TextField(null=True)),
                ('CDR3_IMGT_length', models.IntegerField(null=True)),
                ('Molecular_mass', models.FloatField(null=True)),
                ('pI', models.FloatField(null=True)),
                ('threeprime_V_REGION_accepted_mut_nb', models.IntegerField(null=True)),
                ('D_REGION_accepted_mut_nb', models.IntegerField(null=True)),
                ('fiveprime_J_REGION_accepted_mut_nb', models.IntegerField(null=True)),
                ('Accepted_D_GENE_nb', models.IntegerField(null=True)),
                ('CDR3_IMGT', models.TextField(null=True)),
                ('CDR3_IMGT_nt_nb', models.IntegerField(null=True)),
                ('CDR3_IMGT_with_frameshift', models.TextField(null=True)),
                ('CDR3_IMGT_AA', models.TextField(null=True)),
                ('CDR3_IMGT_AA_with_frameshift', models.TextField(null=True)),
                ('JUNCTION_AA', models.TextField(null=True)),
                ('JUNCTION_AA_with_frameshift', models.TextField(null=True)),
                ('JUNCTION_decryption', models.TextField(null=True)),
                ('Sequence_Identifier', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='Junction', to='PinkStrawberry.sequence')),
            ],
            options={
                'get_latest_by': 'id',
            },
        ),
        migrations.CreateModel(
            name='Nt_sequences',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('J_GENE_and_allele', models.TextField()),
                ('D_GENE_and_allele', models.TextField(null=True)),
                ('V_D_J_REGION', models.TextField(null=True)),
                ('V_J_REGION', models.TextField(null=True)),
                ('V_REGION', models.TextField()),
                ('FR1_IMGT', models.TextField(null=True)),
                ('CDR1_IMGT', models.TextField(null=True)),
                ('FR2_IMGT', models.TextField(null=True)),
                ('CDR2_IMGT', models.TextField(null=True)),
                ('FR3_IMGT', models.TextField(null=True)),
                ('CDR3_IMGT', models.TextField(null=True)),
                ('JUNCTION', models.TextField(null=True)),
                ('threeprime_V_REGION', models.TextField(null=True)),
                ('N_D_J_REGION', models.TextField(null=True)),
                ('N_D_REGION', models.TextField(null=True)),
                ('Pthreeprime_V', models.TextField(null=True)),
                ('N_REGION', models.TextField(null=True)),
                ('N1_REGION', models.TextField(null=True)),
                ('Pfiveprime_D', models.TextField(null=True)),
                ('D_REGION', models.TextField(null=True)),
                ('Pthreeprime_D', models.TextField(null=True)),
                ('Pfiveprime_D1', models.TextField(null=True)),
                ('D1_REGION', models.TextField(null=True)),
                ('Pthreeprime_D1', models.TextField(null=True)),
                ('N2_REGION', models.TextField(null=True)),
                ('Pfiveprime_D2', models.TextField(null=True)),
                ('D2_REGION', models.TextField(null=True)),
                ('Pthreeprime_D2', models.TextField(null=True)),
                ('N3_REGION', models.TextField(null=True)),
                ('Pfiveprime_D3', models.TextField(null=True)),
                ('D3_REGION', models.TextField(null=True)),
                ('Pthreeprime_D3', models.TextField(null=True)),
                ('N4_REGION', models.TextField(null=True)),
                ('Pfiveprime_J', models.TextField(null=True)),
                ('fiveprime_J_REGION', models.TextField(null=True)),
                ('D_J_REGION', models.TextField(null=True)),
                ('J_REGION', models.TextField()),
                ('FR4_IMGT', models.TextField(null=True)),
                ('V_D_J_REGION_start', models.IntegerField(null=True)),
                ('V_D_J_REGION_end', models.IntegerField(null=True)),
                ('V_J_REGION_start', models.IntegerField(null=True)),
                ('V_J_REGION_end', models.IntegerField(null=True)),
                ('V_REGION_start', models.IntegerField()),
                ('V_REGION_end', models.IntegerField()),
                ('FR1_IMGT_start', models.IntegerField(null=True)),
                ('FR1_IMGT_end', models.IntegerField(null=True)),
                ('CDR1_IMGT_start', models.IntegerField(null=True)),
                ('CDR1_IMGT_end', models.IntegerField(null=True)),
                ('FR2_IMGT_start', models.IntegerField(null=True)),
                ('FR2_IMGT_end', models.IntegerField(null=True)),
                ('CDR2_IMGT_start', models.IntegerField(null=True)),
                ('CDR2_IMGT_end', models.IntegerField(null=True)),
                ('FR3_IMGT_start', models.IntegerField(null=True)),
                ('FR3_IMGT_end', models.IntegerField(null=True)),
                ('CDR3_IMGT_start', models.IntegerField(null=True)),
                ('CDR3_IMGT_end', models.IntegerField(null=True)),
                ('JUNCTION_start', models.IntegerField(null=True)),
                ('JUNCTION_end', models.IntegerField(null=True)),
                ('threeprime_V_REGION_start', models.IntegerField(null=True)),
                ('threeprime_V_REGION_end', models.IntegerField(null=True)),
                ('N_D_J_REGION_start', models.IntegerField(null=True)),
                ('N_D_J_REGION_end', models.IntegerField(null=True)),
                ('N_D_REGION_start', models.IntegerField(null=True)),
                ('N_D_REGION_end', models.IntegerField(null=True)),
                ('Pthreeprime_V_start', models.IntegerField(null=True)),
                ('Pthreeprime_V_end', models.IntegerField(null=True)),
                ('N_REGION_start', models.IntegerField(null=True)),
                ('N_REGION_end', models.IntegerField(null=True)),
                ('N1_REGION_start', models.IntegerField(null=True)),
                ('N1_REGION_end', models.IntegerField(null=True)),
                ('Pfiveprime_D_start', models.IntegerField(null=True)),
                ('Pfiveprime_D_end', models.IntegerField(null=True)),
                ('D_REGION_start', models.IntegerField(null=True)),
                ('D_REGION_end', models.IntegerField(null=True)),
                ('Pthreeprime_D_start', models.IntegerField(null=True)),
                ('Pthreeprime_D_end', models.IntegerField(null=True)),
                ('Pfiveprime_D1_start', models.IntegerField(null=True)),
                ('Pfiveprime_D1_end', models.IntegerField(null=True)),
                ('D1_REGION_start', models.IntegerField(null=True)),
                ('D1_REGION_end', models.IntegerField(null=True)),
                ('Pthreeprime_D1_start', models.IntegerField(null=True)),
                ('Pthreeprime_D1_end', models.IntegerField(null=True)),
                ('N2_REGION_start', models.IntegerField(null=True)),
                ('N2_REGION_end', models.IntegerField(null=True)),
                ('Pfiveprime_D2_start', models.IntegerField(null=True)),
                ('Pfiveprime_D2_end', models.IntegerField(null=True)),
                ('D2_REGION_start', models.IntegerField(null=True)),
                ('D2_REGION_end', models.IntegerField(null=True)),
                ('Pthreeprime_D2_start', models.IntegerField(null=True)),
                ('Pthreeprime_D2_end', models.IntegerField(null=True)),
                ('N3_REGION_start', models.IntegerField(null=True)),
                ('N3_REGION_end', models.IntegerField(null=True)),
                ('Pfiveprime_D3_start', models.IntegerField(null=True)),
                ('Pfiveprime_D3_end', models.IntegerField(null=True)),
                ('D3_REGION_start', models.IntegerField(null=True)),
                ('D3_REGION_end', models.IntegerField(null=True)),
                ('Pthreeprime_D3_start', models.IntegerField(null=True)),
                ('Pthreeprime_D3_end', models.IntegerField(null=True)),
                ('N4_REGION_start', models.IntegerField(null=True)),
                ('N4_REGION_end', models.IntegerField(null=True)),
                ('Pfiveprime_J_start', models.IntegerField(null=True)),
                ('Pfiveprime_J_end', models.IntegerField(null=True)),
                ('fiveprime_J_REGION_start', models.IntegerField(null=True)),
                ('fiveprime_J_REGION_end', models.IntegerField(null=True)),
                ('D_J_REGION_start', models.IntegerField(null=True)),
                ('D_J_REGION_end', models.IntegerField(null=True)),
                ('J_REGION_start', models.IntegerField()),
                ('J_REGION_end', models.IntegerField()),
                ('FR4_IMGT_start', models.IntegerField(null=True)),
                ('FR4_IMGT_end', models.IntegerField(null=True)),
                ('V_REGION_reading_frame', models.IntegerField()),
                ('V_REGION_partial_fiveprime_missing_nt_nb', models.IntegerField(null=True)),
                ('V_REGION_uncertain_nt_nb', models.IntegerField(null=True)),
                ('J_REGION_partial_threeprime_missing_nt_nb', models.IntegerField(null=True)),
                ('Sequence_Identifier', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='Nt_sequences', to='PinkStrawberry.sequence')),
            ],
            options={
                'get_latest_by': 'id',
            },
        ),
        migrations.CreateModel(
            name='Summary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('V_REGION_score', models.IntegerField()),
                ('V_REGION_identity_percent', models.FloatField()),
                ('V_REGION_identity_nt', models.TextField()),
                ('V_REGION_identity_percent_with_insdel_events', models.FloatField(null=True)),
                ('V_REGION_identity_nt_with_insdel_events', models.TextField(null=True)),
                ('J_GENE_and_allele', models.TextField()),
                ('J_REGION_score', models.IntegerField()),
                ('J_REGION_identity_percent', models.FloatField()),
                ('J_REGION_identity_nt', models.TextField()),
                ('D_GENE_and_allele', models.TextField(null=True)),
                ('D_REGION_reading_frame', models.IntegerField(null=True)),
                ('CDR1_IMGT_length', models.IntegerField()),
                ('CDR2_IMGT_length', models.IntegerField()),
                ('CDR3_IMGT_length', models.IntegerField()),
                ('CDR_IMGT_lengths', models.TextField()),
                ('FR_IMGT_lengths', models.TextField()),
                ('AA_JUNCTION', models.TextField()),
                ('JUNCTION_frame', models.TextField()),
                ('Orientation', models.CharField(max_length=1)),
                ('V_DOMAIN_Functionality_comment', models.TextField(null=True)),
                ('V_REGION_potential_insdel', models.TextField(null=True)),
                ('J_GENE_and_allele_comment', models.TextField(null=True)),
                ('V_REGION_insertions', models.TextField(null=True)),
                ('V_REGION_deletions', models.TextField(null=True)),
                ('Sequence', models.TextField()),
                ('fiveprime_trimmed_n_nb', models.IntegerField()),
                ('threeprime_trimmed_n_nb', models.IntegerField()),
                ('Analysed_sequence_length', models.IntegerField()),
                ('Sequence_analysis_category', models.TextField()),
                ('Sequence_Identifier', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='Summary', to='PinkStrawberry.sequence')),
            ],
            options={
                'get_latest_by': 'id',
            },
        ),
        migrations.CreateModel(
            name='V_REGION_AA_change_statistics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('V_REGION_Nb_of_positions_including_IMGT_gaps_AA', models.IntegerField()),
                ('V_REGION_Nb_of_AA', models.IntegerField()),
                ('V_REGION_Nb_of_identical_AA', models.IntegerField()),
                ('V_REGION_Nb_of_AA_changes', models.IntegerField()),
                ('V_REGION_PPP', models.IntegerField()),
                ('V_REGION_PPN', models.IntegerField()),
                ('V_REGION_PNP', models.IntegerField()),
                ('V_REGION_PNN', models.IntegerField()),
                ('V_REGION_NPN', models.IntegerField()),
                ('V_REGION_NNP', models.IntegerField()),
                ('V_REGION_NNN', models.IntegerField()),
                ('V_REGION_Very_similar', models.IntegerField()),
                ('V_REGION_Similar', models.IntegerField()),
                ('V_REGION_Dissimilar', models.IntegerField()),
                ('V_REGION_Very_dissimilar', models.IntegerField()),
                ('FR1_IMGT_Nb_of_positions_including_IMGT_gaps_AA', models.IntegerField()),
                ('FR1_IMGT_Nb_of_AA', models.IntegerField()),
                ('FR1_IMGT_Nb_of_identical_AA', models.IntegerField()),
                ('FR1_IMGT_Nb_of_AA_changes', models.IntegerField()),
                ('FR1_IMGT_PPP', models.IntegerField()),
                ('FR1_IMGT_PPN', models.IntegerField()),
                ('FR1_IMGT_PNP', models.IntegerField()),
                ('FR1_IMGT_PNN', models.IntegerField()),
                ('FR1_IMGT_NPN', models.IntegerField()),
                ('FR1_IMGT_NNP', models.IntegerField()),
                ('FR1_IMGT_NNN', models.IntegerField()),
                ('FR1_IMGT_Very_similar', models.IntegerField()),
                ('FR1_IMGT_Similar', models.IntegerField()),
                ('FR1_IMGT_Dissimilar', models.IntegerField()),
                ('FR1_IMGT_Very_dissimilar', models.IntegerField()),
                ('CDR1_IMGT_Nb_of_positions_including_IMGT_gaps_AA', models.IntegerField()),
                ('CDR1_IMGT_Nb_of_AA', models.IntegerField()),
                ('CDR1_IMGT_Nb_of_identical_AA', models.IntegerField()),
                ('CDR1_IMGT_Nb_of_AA_changes', models.IntegerField()),
                ('CDR1_IMGT_PPP', models.IntegerField()),
                ('CDR1_IMGT_PPN', models.IntegerField()),
                ('CDR1_IMGT_PNP', models.IntegerField()),
                ('CDR1_IMGT_PNN', models.IntegerField()),
                ('CDR1_IMGT_NPN', models.IntegerField()),
                ('CDR1_IMGT_NNP', models.IntegerField()),
                ('CDR1_IMGT_NNN', models.IntegerField()),
                ('CDR1_IMGT_Very_similar', models.IntegerField()),
                ('CDR1_IMGT_Similar', models.IntegerField()),
                ('CDR1_IMGT_Dissimilar', models.IntegerField()),
                ('CDR1_IMGT_Very_dissimilar', models.IntegerField()),
                ('FR2_IMGT_Nb_of_positions_including_IMGT_gaps_AA', models.IntegerField()),
                ('FR2_IMGT_Nb_of_AA', models.IntegerField()),
                ('FR2_IMGT_Nb_of_identical_AA', models.IntegerField()),
                ('FR2_IMGT_Nb_of_AA_changes', models.IntegerField()),
                ('FR2_IMGT_PPP', models.IntegerField()),
                ('FR2_IMGT_PPN', models.IntegerField()),
                ('FR2_IMGT_PNP', models.IntegerField()),
                ('FR2_IMGT_PNN', models.IntegerField()),
                ('FR2_IMGT_NPN', models.IntegerField()),
                ('FR2_IMGT_NNP', models.IntegerField()),
                ('FR2_IMGT_NNN', models.IntegerField()),
                ('FR2_IMGT_Very_similar', models.IntegerField()),
                ('FR2_IMGT_Similar', models.IntegerField()),
                ('FR2_IMGT_Dissimilar', models.IntegerField()),
                ('FR2_IMGT_Very_dissimilar', models.IntegerField()),
                ('CDR2_IMGT_Nb_of_positions_including_IMGT_gaps_AA', models.IntegerField()),
                ('CDR2_IMGT_Nb_of_AA', models.IntegerField()),
                ('CDR2_IMGT_Nb_of_identical_AA', models.IntegerField()),
                ('CDR2_IMGT_Nb_of_AA_changes', models.IntegerField()),
                ('CDR2_IMGT_PPP', models.IntegerField()),
                ('CDR2_IMGT_PPN', models.IntegerField()),
                ('CDR2_IMGT_PNP', models.IntegerField()),
                ('CDR2_IMGT_PNN', models.IntegerField()),
                ('CDR2_IMGT_NPN', models.IntegerField()),
                ('CDR2_IMGT_NNP', models.IntegerField()),
                ('CDR2_IMGT_NNN', models.IntegerField()),
                ('CDR2_IMGT_Very_similar', models.IntegerField()),
                ('CDR2_IMGT_Similar', models.IntegerField()),
                ('CDR2_IMGT_Dissimilar', models.IntegerField()),
                ('CDR2_IMGT_Very_dissimilar', models.IntegerField()),
                ('FR3_IMGT_Nb_of_positions_including_IMGT_gaps_AA', models.IntegerField()),
                ('FR3_IMGT_Nb_of_AA', models.IntegerField()),
                ('FR3_IMGT_Nb_of_identical_AA', models.IntegerField()),
                ('FR3_IMGT_Nb_of_AA_changes', models.IntegerField()),
                ('FR3_IMGT_PPP', models.IntegerField()),
                ('FR3_IMGT_PPN', models.IntegerField()),
                ('FR3_IMGT_PNP', models.IntegerField()),
                ('FR3_IMGT_PNN', models.IntegerField()),
                ('FR3_IMGT_NPN', models.IntegerField()),
                ('FR3_IMGT_NNP', models.IntegerField()),
                ('FR3_IMGT_NNN', models.IntegerField()),
                ('FR3_IMGT_Very_similar', models.IntegerField()),
                ('FR3_IMGT_Similar', models.IntegerField()),
                ('FR3_IMGT_Dissimilar', models.IntegerField()),
                ('FR3_IMGT_Very_dissimilar', models.IntegerField()),
                ('CDR3_IMGT_Nb_of_positions_including_IMGT_gaps_AA', models.IntegerField()),
                ('CDR3_IMGT_Nb_of_AA', models.IntegerField()),
                ('CDR3_IMGT_Nb_of_identical_AA', models.IntegerField()),
                ('CDR3_IMGT_Nb_of_AA_changes', models.IntegerField()),
                ('CDR3_IMGT_PPP', models.IntegerField()),
                ('CDR3_IMGT_PPN', models.IntegerField()),
                ('CDR3_IMGT_PNP', models.IntegerField()),
                ('CDR3_IMGT_PNN', models.IntegerField()),
                ('CDR3_IMGT_NPN', models.IntegerField()),
                ('CDR3_IMGT_NNP', models.IntegerField()),
                ('CDR3_IMGT_NNN', models.IntegerField()),
                ('CDR3_IMGT_Very_similar', models.IntegerField()),
                ('CDR3_IMGT_Similar', models.IntegerField()),
                ('CDR3_IMGT_Dissimilar', models.IntegerField()),
                ('CDR3_IMGT_Very_dissimilar', models.IntegerField()),
                ('Sequence_Identifier', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='V_REGION_AA_change_statistics', to='PinkStrawberry.sequence')),
            ],
            options={
                'get_latest_by': 'id',
            },
        ),
        migrations.CreateModel(
            name='V_REGION_mutation_and_AA_change_table',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('V_REGION', models.TextField(null=True)),
                ('FR1_IMGT', models.TextField(null=True)),
                ('CDR1_IMGT', models.TextField(null=True)),
                ('FR2_IMGT', models.TextField(null=True)),
                ('CDR2_IMGT', models.TextField(null=True)),
                ('FR3_IMGT', models.TextField(null=True)),
                ('CDR3_IMGT', models.TextField(null=True)),
                ('Sequence_Identifier', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='V_REGION_mutation_and_AA_change_table', to='PinkStrawberry.sequence')),
            ],
            options={
                'get_latest_by': 'id',
            },
        ),
        migrations.CreateModel(
            name='V_REGION_mutation_hotspots',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ata', models.TextField()),
                ('tat', models.TextField()),
                ('aggctat', models.TextField()),
                ('atagcct', models.TextField()),
                ('Sequence_Identifier', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='V_REGION_mutation_hotspots', to='PinkStrawberry.sequence')),
            ],
            options={
                'get_latest_by': 'id',
            },
        ),
        migrations.CreateModel(
            name='V_REGION_nt_mutation_statistics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('V_REGION_Nb_of_positions_including_IMGT_gaps_nt', models.IntegerField()),
                ('V_REGION_Nb_of_nucleotides', models.IntegerField()),
                ('V_REGION_Nb_of_identical_nucleotides', models.IntegerField()),
                ('V_REGION_Nb_of_mutations', models.IntegerField()),
                ('V_REGION_Nb_of_silent_mutations', models.IntegerField()),
                ('V_REGION_Nb_of_nonsilent_mutations', models.IntegerField()),
                ('V_REGION_a_to_g', models.IntegerField()),
                ('V_REGION_g_to_a', models.IntegerField()),
                ('V_REGION_c_to_t', models.IntegerField()),
                ('V_REGION_t_to_c', models.IntegerField()),
                ('V_REGION_a_to_c', models.IntegerField()),
                ('V_REGION_c_to_a', models.IntegerField()),
                ('V_REGION_a_to_t', models.IntegerField()),
                ('V_REGION_t_to_a', models.IntegerField()),
                ('V_REGION_g_to_c', models.IntegerField()),
                ('V_REGION_c_to_g', models.IntegerField()),
                ('V_REGION_g_to_t', models.IntegerField()),
                ('V_REGION_t_to_g', models.IntegerField()),
                ('FR1_IMGT_Nb_of_positions_including_IMGT_gaps_nt', models.IntegerField()),
                ('FR1_IMGT_Nb_of_nucleotides', models.IntegerField()),
                ('FR1_IMGT_Nb_of_identical_nucleotides', models.IntegerField()),
                ('FR1_IMGT_Nb_of_mutations', models.IntegerField()),
                ('FR1_IMGT_Nb_of_silent_mutations', models.IntegerField()),
                ('FR1_IMGT_Nb_of_nonsilent_mutations', models.IntegerField()),
                ('FR1_IMGT_a_to_g', models.IntegerField()),
                ('FR1_IMGT_g_to_a', models.IntegerField()),
                ('FR1_IMGT_c_to_t', models.IntegerField()),
                ('FR1_IMGT_t_to_c', models.IntegerField()),
                ('FR1_IMGT_a_to_c', models.IntegerField()),
                ('FR1_IMGT_c_to_a', models.IntegerField()),
                ('FR1_IMGT_a_to_t', models.IntegerField()),
                ('FR1_IMGT_t_to_a', models.IntegerField()),
                ('FR1_IMGT_g_to_c', models.IntegerField()),
                ('FR1_IMGT_c_to_g', models.IntegerField()),
                ('FR1_IMGT_g_to_t', models.IntegerField()),
                ('FR1_IMGT_t_to_g', models.IntegerField()),
                ('CDR1_IMGT_Nb_of_positions_including_IMGT_gaps_nt', models.IntegerField()),
                ('CDR1_IMGT_Nb_of_nucleotides', models.IntegerField()),
                ('CDR1_IMGT_Nb_of_identical_nucleotides', models.IntegerField()),
                ('CDR1_IMGT_Nb_of_mutations', models.IntegerField()),
                ('CDR1_IMGT_Nb_of_silent_mutations', models.IntegerField()),
                ('CDR1_IMGT_Nb_of_nonsilent_mutations', models.IntegerField()),
                ('CDR1_IMGT_a_to_g', models.IntegerField()),
                ('CDR1_IMGT_g_to_a', models.IntegerField()),
                ('CDR1_IMGT_c_to_t', models.IntegerField()),
                ('CDR1_IMGT_t_to_c', models.IntegerField()),
                ('CDR1_IMGT_a_to_c', models.IntegerField()),
                ('CDR1_IMGT_c_to_a', models.IntegerField()),
                ('CDR1_IMGT_a_to_t', models.IntegerField()),
                ('CDR1_IMGT_t_to_a', models.IntegerField()),
                ('CDR1_IMGT_g_to_c', models.IntegerField()),
                ('CDR1_IMGT_c_to_g', models.IntegerField()),
                ('CDR1_IMGT_g_to_t', models.IntegerField()),
                ('CDR1_IMGT_t_to_g', models.IntegerField()),
                ('FR2_IMGT_Nb_of_positions_including_IMGT_gaps_nt', models.IntegerField()),
                ('FR2_IMGT_Nb_of_nucleotides', models.IntegerField()),
                ('FR2_IMGT_Nb_of_identical_nucleotides', models.IntegerField()),
                ('FR2_IMGT_Nb_of_mutations', models.IntegerField()),
                ('FR2_IMGT_Nb_of_silent_mutations', models.IntegerField()),
                ('FR2_IMGT_Nb_of_nonsilent_mutations', models.IntegerField()),
                ('FR2_IMGT_a_to_g', models.IntegerField()),
                ('FR2_IMGT_g_to_a', models.IntegerField()),
                ('FR2_IMGT_c_to_t', models.IntegerField()),
                ('FR2_IMGT_t_to_c', models.IntegerField()),
                ('FR2_IMGT_a_to_c', models.IntegerField()),
                ('FR2_IMGT_c_to_a', models.IntegerField()),
                ('FR2_IMGT_a_to_t', models.IntegerField()),
                ('FR2_IMGT_t_to_a', models.IntegerField()),
                ('FR2_IMGT_g_to_c', models.IntegerField()),
                ('FR2_IMGT_c_to_g', models.IntegerField()),
                ('FR2_IMGT_g_to_t', models.IntegerField()),
                ('FR2_IMGT_t_to_g', models.IntegerField()),
                ('CDR2_IMGT_Nb_of_positions_including_IMGT_gaps_nt', models.IntegerField()),
                ('CDR2_IMGT_Nb_of_nucleotides', models.IntegerField()),
                ('CDR2_IMGT_Nb_of_identical_nucleotides', models.IntegerField()),
                ('CDR2_IMGT_Nb_of_mutations', models.IntegerField()),
                ('CDR2_IMGT_Nb_of_silent_mutations', models.IntegerField()),
                ('CDR2_IMGT_Nb_of_nonsilent_mutations', models.IntegerField()),
                ('CDR2_IMGT_a_to_g', models.IntegerField()),
                ('CDR2_IMGT_g_to_a', models.IntegerField()),
                ('CDR2_IMGT_c_to_t', models.IntegerField()),
                ('CDR2_IMGT_t_to_c', models.IntegerField()),
                ('CDR2_IMGT_a_to_c', models.IntegerField()),
                ('CDR2_IMGT_c_to_a', models.IntegerField()),
                ('CDR2_IMGT_a_to_t', models.IntegerField()),
                ('CDR2_IMGT_t_to_a', models.IntegerField()),
                ('CDR2_IMGT_g_to_c', models.IntegerField()),
                ('CDR2_IMGT_c_to_g', models.IntegerField()),
                ('CDR2_IMGT_g_to_t', models.IntegerField()),
                ('CDR2_IMGT_t_to_g', models.IntegerField()),
                ('FR3_IMGT_Nb_of_positions_including_IMGT_gaps_nt', models.IntegerField()),
                ('FR3_IMGT_Nb_of_nucleotides', models.IntegerField()),
                ('FR3_IMGT_Nb_of_identical_nucleotides', models.IntegerField()),
                ('FR3_IMGT_Nb_of_mutations', models.IntegerField()),
                ('FR3_IMGT_Nb_of_silent_mutations', models.IntegerField()),
                ('FR3_IMGT_Nb_of_nonsilent_mutations', models.IntegerField()),
                ('FR3_IMGT_a_to_g', models.IntegerField()),
                ('FR3_IMGT_g_to_a', models.IntegerField()),
                ('FR3_IMGT_c_to_t', models.IntegerField()),
                ('FR3_IMGT_t_to_c', models.IntegerField()),
                ('FR3_IMGT_a_to_c', models.IntegerField()),
                ('FR3_IMGT_c_to_a', models.IntegerField()),
                ('FR3_IMGT_a_to_t', models.IntegerField()),
                ('FR3_IMGT_t_to_a', models.IntegerField()),
                ('FR3_IMGT_g_to_c', models.IntegerField()),
                ('FR3_IMGT_c_to_g', models.IntegerField()),
                ('FR3_IMGT_g_to_t', models.IntegerField()),
                ('FR3_IMGT_t_to_g', models.IntegerField()),
                ('CDR3_IMGT_Nb_of_positions_including_IMGT_gaps_nt', models.IntegerField()),
                ('CDR3_IMGT_Nb_of_nucleotides', models.IntegerField()),
                ('CDR3_IMGT_Nb_of_identical_nucleotides', models.IntegerField()),
                ('CDR3_IMGT_Nb_of_mutations', models.IntegerField()),
                ('CDR3_IMGT_Nb_of_silent_mutations', models.IntegerField(null=True)),
                ('CDR3_IMGT_Nb_of_nonsilent_mutations', models.IntegerField(null=True)),
                ('CDR3_IMGT_a_to_g', models.IntegerField(null=True)),
                ('CDR3_IMGT_g_to_a', models.IntegerField(null=True)),
                ('CDR3_IMGT_c_to_t', models.IntegerField(null=True)),
                ('CDR3_IMGT_t_to_c', models.IntegerField(null=True)),
                ('CDR3_IMGT_a_to_c', models.IntegerField(null=True)),
                ('CDR3_IMGT_c_to_a', models.IntegerField(null=True)),
                ('CDR3_IMGT_a_to_t', models.IntegerField(null=True)),
                ('CDR3_IMGT_t_to_a', models.IntegerField(null=True)),
                ('CDR3_IMGT_g_to_c', models.IntegerField(null=True)),
                ('CDR3_IMGT_c_to_g', models.IntegerField(null=True)),
                ('CDR3_IMGT_g_to_t', models.IntegerField(null=True)),
                ('CDR3_IMGT_t_to_g', models.IntegerField(null=True)),
                ('Sequence_Identifier', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='V_REGION_nt_mutation_statistics', to='PinkStrawberry.sequence')),
            ],
            options={
                'get_latest_by': 'id',
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('description', models.TextField(null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'get_latest_by': 'id',
            },
        ),
        migrations.CreateModel(
            name='VQuest_Run',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('description', models.TextField(null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('Summary', models.FileField(upload_to=PinkStrawberry.models._vquest_path)),
                ('IMGT_gapped_nt_sequences', models.FileField(upload_to=PinkStrawberry.models._vquest_path)),
                ('Nt_sequences', models.FileField(upload_to=PinkStrawberry.models._vquest_path)),
                ('IMGT_gapped_AA_sequences', models.FileField(upload_to=PinkStrawberry.models._vquest_path)),
                ('AA_sequences', models.FileField(upload_to=PinkStrawberry.models._vquest_path)),
                ('Junction', models.FileField(upload_to=PinkStrawberry.models._vquest_path)),
                ('V_REGION_mutation_and_AA_change_table', models.FileField(upload_to=PinkStrawberry.models._vquest_path)),
                ('V_REGION_nt_mutation_statistics', models.FileField(upload_to=PinkStrawberry.models._vquest_path)),
                ('V_REGION_AA_change_statistics', models.FileField(upload_to=PinkStrawberry.models._vquest_path)),
                ('V_REGION_mutation_hotspots', models.FileField(upload_to=PinkStrawberry.models._vquest_path)),
                ('Parameters', models.FileField(upload_to=PinkStrawberry.models._vquest_path)),
                ('Project', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='VQuest_Run', to='PinkStrawberry.project')),
                ('Comment', models.TextField(null=True)),
            ],
            options={
                'get_latest_by': 'id',
            },
        ),
        migrations.AlterField(
            model_name='bcr',
            name='Run',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='BCR', to='PinkStrawberry.vquest_run'),
        ),
        migrations.AlterField(
            model_name='sequence',
            name='Run',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Sequence', to='PinkStrawberry.vquest_run'),
        ),
        migrations.DeleteModel(
            name='Run_Identifier',
        ),
        migrations.AddField(
            model_name='sequence',
            name='Nt_Sequence',
            field=models.TextField(null=True),
        ),
        migrations.CreateModel(
            name='IMGT_AA_change',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('aa_original', models.CharField(max_length=1)),
                ('aa_pos', models.IntegerField()),
                ('aa_changed', models.CharField(max_length=1)),
                ('hydrophobicity', models.BooleanField()),
                ('volume', models.BooleanField()),
                ('chemical_characteristics', models.BooleanField()),
                ('similarity', models.IntegerField(choices=[(0, 'Very dissimilar'), (1, 'Dissimilar'), (2, 'Similar'), (3, 'Very similar'), (4, 'Identical')])),
                ('region', models.CharField(max_length=10)),
                ('sequence', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='IMGT_AA_change', to='PinkStrawberry.sequence')),
            ],
            options={
                'get_latest_by': 'id',
            },
        ),
        migrations.CreateModel(
            name='IMGT_Nt_mutation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nt_original', models.CharField(max_length=1)),
                ('nt_pos', models.IntegerField()),
                ('nt_mutated', models.CharField(max_length=1)),
                ('aa_change', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='IMGT_Nt_mutation', to='PinkStrawberry.imgt_aa_change')),
                ('sequence', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='IMGT_Nt_mutation', to='PinkStrawberry.sequence')),
            ],
        ),
        migrations.DeleteModel(
            name='Mutations',
        ),
        migrations.DeleteModel(
            name='Mutations_bases',
        ),
        migrations.DeleteModel(
            name='Predictions',
        ),
        migrations.DeleteModel(
            name='RunIdentifiers',
        ),
        migrations.DeleteModel(
            name='Sequences',
        ),
        migrations.CreateModel(
            name='AA_change',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('original', models.CharField(max_length=1)),
                ('position', models.IntegerField()),
                ('changed', models.CharField(max_length=1)),
                ('sequence', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='AA_changes', to='PinkStrawberry.sequence')),
            ],
        ),
        migrations.CreateModel(
            name='Prediction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('peptide', models.TextField()),
                ('allele', models.CharField(max_length=20)),
                ('score', models.FloatField()),
                ('percentile_rank', models.FloatField()),
                ('affinity', models.FloatField()),
                ('offset', models.IntegerField()),
                ('sequence', models.TextField()),
                ('germline', models.BooleanField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='MHC_allele',
            fields=[
                ('name', models.TextField(primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Peptide_comparison',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('peptide', models.TextField(null=True)),
                ('allele', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='Pred_peptides_comparison', to='PinkStrawberry.mhc_allele')),
                ('score_diff', models.FloatField(null=True)),
                ('percentile_rank_diff', models.FloatField(null=True)),
                ('affinity_diff', models.FloatField(null=True)),
                ('Germline_peptide', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='GLcomparison', to='PinkStrawberry.prediction')),
                ('Target_peptide', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comparison', to='PinkStrawberry.prediction')),
                ('sequence', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Peptide_comparison', to='PinkStrawberry.sequence')),
            ],
        ),
        migrations.AlterField(
            model_name='prediction',
            name='allele',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='Pred_peptides', to='PinkStrawberry.mhc_allele'),
        ),
        migrations.CreateModel(
            name='Ms_peptide',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('peptide', models.TextField()),
                ('start', models.IntegerField()),
                ('stop', models.IntegerField()),
                ('confidence', models.IntegerField(choices=[(0, 'Low'), (1, 'Medium'), (2, 'High')])),
                ('allele', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='Ms_peptides', to='PinkStrawberry.mhc_allele')),
                ('quality_qval', models.FloatField()),
                ('Comment', models.TextField(null=True)),
                ('sequence', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='Ms_peptide', to='PinkStrawberry.sequence')),
                ('sheet_sequence', models.TextField(default='TEST')),
                ('possible_allele', models.ManyToManyField(related_name='Ms_peptides_possible', to='PinkStrawberry.mhc_allele')),
                ('sequence_start', models.IntegerField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Predicted_Found',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quality', models.IntegerField(choices=[(0, 'Low'), (1, 'Medium'), (2, 'High')], null=True)),
                ('found', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pairing', to='PinkStrawberry.ms_peptide')),
                ('predicted', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pairing', to='PinkStrawberry.prediction')),
                ('sequence', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='predicted_found', to='PinkStrawberry.sequence')),
            ],
        ),
        migrations.AddField(
            model_name='prediction',
            name='binder',
            field=models.IntegerField(choices=[(2, 'Strong binder'), (1, 'Weak binder'), (0, 'No binder')], null=True),
        ),
        migrations.RenameField(
            model_name='prediction',
            old_name='sequence',
            new_name='mhcpansequence',
        ),
        migrations.AddField(
            model_name='prediction',
            name='sequence',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='Prediction', to='PinkStrawberry.sequence'),
        ),
        migrations.CreateModel(
            name='alignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('position', models.IntegerField()),
                ('sequence', models.TextField()),
                ('linked_sequence', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='alignment', to='PinkStrawberry.sequence')),
            ],
        ),
        migrations.CreateModel(
            name='Nt_mutation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('original', models.CharField(max_length=1)),
                ('position', models.IntegerField()),
                ('changed', models.CharField(max_length=1)),
                ('aa_change', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='mutations', to='PinkStrawberry.aa_change')),
                ('sequence', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Nt_mutations', to='PinkStrawberry.sequence')),
            ],
        ),
    ]
